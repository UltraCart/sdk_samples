# Reference Implementation: https://github.com/UltraCart/responsive_checkout

# this example returns a shopping cart given a return_token.  The return token is generated by StoreFront Communications
# and usually emailed to a customer.  The link within the email will (when you configure your storefront communications)
# provide a link to this script where you may use the token to retrieve the customer's cart.

require 'ultracart_api'
require_relative '../constants'

checkout_api = UltracartClient::CheckoutApi.new_using_api_key(Constants::API_KEY)

expansion = "items,billing,shipping,coupons,checkout,payment,summary,taxes"
# Possible Expansion Variables: (see https://www.ultracart.com/api/#resource_checkout.html
# affiliate                   checkout	                        customer_profile
# billing                     coupons                             gift
# gift_certificate	          items.attributes	                items.multimedia
# items	                      items.multimedia.thumbnails         items.physical
# marketing	                  payment	                            settings.gift
# settings.billing.provinces	settings.shipping.deliver_on_date   settings.shipping.estimates
# settings.shipping.provinces	settings.shipping.ship_on_date	    settings.taxes
# settings.terms	            shipping	                        taxes
# summary	                    upsell_after

cart_token = '1234567890'  # usually retrieved from a query parameter
api_response = checkout_api.get_cart_by_return_token(cart_token, _expand: expansion)
cart = api_response.cart

# TODO: set or re-set the cart cookie if this is part of a multi-page process. two weeks is a generous cart id time.
cookies[Constants::CART_ID_COOKIE_NAME] = { value: cart.cart_id, expires: Time.now + 1209600, path: "/" }

puts cart.inspect