/* 
 * UltraCart Rest API V2
 *
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = com.ultracart.admin.v2.Client.SwaggerDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// OrderAffiliate
    /// </summary>
    [DataContract]
    public partial class OrderAffiliate :  IEquatable<OrderAffiliate>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderAffiliate" /> class.
        /// </summary>
        /// <param name="AffiliateOid">Affiliate ID.</param>
        /// <param name="LedgerEntries">Ledger entries associated with all the commissions earned on this order.</param>
        /// <param name="SubId">Sub identifier provided by the affiliate on the click that generated this order.</param>
        public OrderAffiliate(int? AffiliateOid = default(int?), List<OrderAffiliateLedger> LedgerEntries = default(List<OrderAffiliateLedger>), string SubId = default(string))
        {
            this.AffiliateOid = AffiliateOid;
            this.LedgerEntries = LedgerEntries;
            this.SubId = SubId;
        }
        
        /// <summary>
        /// Affiliate ID
        /// </summary>
        /// <value>Affiliate ID</value>
        [DataMember(Name="affiliate_oid", EmitDefaultValue=false)]
        public int? AffiliateOid { get; set; }

        /// <summary>
        /// Ledger entries associated with all the commissions earned on this order
        /// </summary>
        /// <value>Ledger entries associated with all the commissions earned on this order</value>
        [DataMember(Name="ledger_entries", EmitDefaultValue=false)]
        public List<OrderAffiliateLedger> LedgerEntries { get; set; }

        /// <summary>
        /// Sub identifier provided by the affiliate on the click that generated this order
        /// </summary>
        /// <value>Sub identifier provided by the affiliate on the click that generated this order</value>
        [DataMember(Name="sub_id", EmitDefaultValue=false)]
        public string SubId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OrderAffiliate {\n");
            sb.Append("  AffiliateOid: ").Append(AffiliateOid).Append("\n");
            sb.Append("  LedgerEntries: ").Append(LedgerEntries).Append("\n");
            sb.Append("  SubId: ").Append(SubId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrderAffiliate);
        }

        /// <summary>
        /// Returns true if OrderAffiliate instances are equal
        /// </summary>
        /// <param name="input">Instance of OrderAffiliate to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrderAffiliate input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AffiliateOid == input.AffiliateOid ||
                    (this.AffiliateOid != null &&
                    this.AffiliateOid.Equals(input.AffiliateOid))
                ) && 
                (
                    this.LedgerEntries == input.LedgerEntries ||
                    this.LedgerEntries != null &&
                    this.LedgerEntries.SequenceEqual(input.LedgerEntries)
                ) && 
                (
                    this.SubId == input.SubId ||
                    (this.SubId != null &&
                    this.SubId.Equals(input.SubId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AffiliateOid != null)
                    hashCode = hashCode * 59 + this.AffiliateOid.GetHashCode();
                if (this.LedgerEntries != null)
                    hashCode = hashCode * 59 + this.LedgerEntries.GetHashCode();
                if (this.SubId != null)
                    hashCode = hashCode * 59 + this.SubId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
