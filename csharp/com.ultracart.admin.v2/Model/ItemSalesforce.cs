/* 
 * UltraCart Rest API V2
 *
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = com.ultracart.admin.v2.Client.SwaggerDateConverter;

namespace com.ultracart.admin.v2.Model
{
    /// <summary>
    /// ItemSalesforce
    /// </summary>
    [DataContract]
    public partial class ItemSalesforce :  IEquatable<ItemSalesforce>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ItemSalesforce" /> class.
        /// </summary>
        /// <param name="SfdcPricebookId">Salesforce.com pricebook id.</param>
        /// <param name="SfdcProductId">Salesforce.com product id.</param>
        public ItemSalesforce(string SfdcPricebookId = default(string), string SfdcProductId = default(string))
        {
            this.SfdcPricebookId = SfdcPricebookId;
            this.SfdcProductId = SfdcProductId;
        }
        
        /// <summary>
        /// Salesforce.com pricebook id
        /// </summary>
        /// <value>Salesforce.com pricebook id</value>
        [DataMember(Name="sfdc_pricebook_id", EmitDefaultValue=false)]
        public string SfdcPricebookId { get; set; }

        /// <summary>
        /// Salesforce.com product id
        /// </summary>
        /// <value>Salesforce.com product id</value>
        [DataMember(Name="sfdc_product_id", EmitDefaultValue=false)]
        public string SfdcProductId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ItemSalesforce {\n");
            sb.Append("  SfdcPricebookId: ").Append(SfdcPricebookId).Append("\n");
            sb.Append("  SfdcProductId: ").Append(SfdcProductId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ItemSalesforce);
        }

        /// <summary>
        /// Returns true if ItemSalesforce instances are equal
        /// </summary>
        /// <param name="input">Instance of ItemSalesforce to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ItemSalesforce input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SfdcPricebookId == input.SfdcPricebookId ||
                    (this.SfdcPricebookId != null &&
                    this.SfdcPricebookId.Equals(input.SfdcPricebookId))
                ) && 
                (
                    this.SfdcProductId == input.SfdcProductId ||
                    (this.SfdcProductId != null &&
                    this.SfdcProductId.Equals(input.SfdcProductId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SfdcPricebookId != null)
                    hashCode = hashCode * 59 + this.SfdcPricebookId.GetHashCode();
                if (this.SfdcProductId != null)
                    hashCode = hashCode * 59 + this.SfdcProductId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
