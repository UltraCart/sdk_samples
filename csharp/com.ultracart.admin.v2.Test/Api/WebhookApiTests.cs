/* 
 * UltraCart Rest API V2
 *
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using com.ultracart.admin.v2.Client;
using com.ultracart.admin.v2.Api;
using com.ultracart.admin.v2.Model;

namespace com.ultracart.admin.v2.Test
{
    /// <summary>
    ///  Class for testing WebhookApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class WebhookApiTests
    {
        private WebhookApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WebhookApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WebhookApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' WebhookApi
            //Assert.IsInstanceOfType(typeof(WebhookApi), instance, "instance is a WebhookApi");
        }

        
        /// <summary>
        /// Test DeleteWebhook
        /// </summary>
        [Test]
        public void DeleteWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? webhookOid = null;
            //instance.DeleteWebhook(webhookOid);
            
        }
        
        /// <summary>
        /// Test GetWebhookLog
        /// </summary>
        [Test]
        public void GetWebhookLogTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? webhookOid = null;
            //string requestId = null;
            //var response = instance.GetWebhookLog(webhookOid, requestId);
            //Assert.IsInstanceOf<WebhookLogResponse> (response, "response is WebhookLogResponse");
        }
        
        /// <summary>
        /// Test GetWebhookLogSummaries
        /// </summary>
        [Test]
        public void GetWebhookLogSummariesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? webhookOid = null;
            //int? limit = null;
            //int? offset = null;
            //string since = null;
            //var response = instance.GetWebhookLogSummaries(webhookOid, limit, offset, since);
            //Assert.IsInstanceOf<WebhookLogSummariesResponse> (response, "response is WebhookLogSummariesResponse");
        }
        
        /// <summary>
        /// Test GetWebhooks
        /// </summary>
        [Test]
        public void GetWebhooksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? limit = null;
            //int? offset = null;
            //string sort = null;
            //bool? placeholders = null;
            //var response = instance.GetWebhooks(limit, offset, sort, placeholders);
            //Assert.IsInstanceOf<WebhooksResponse> (response, "response is WebhooksResponse");
        }
        
        /// <summary>
        /// Test InsertWebhook
        /// </summary>
        [Test]
        public void InsertWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Webhook webhook = null;
            //bool? placeholders = null;
            //var response = instance.InsertWebhook(webhook, placeholders);
            //Assert.IsInstanceOf<WebhookResponse> (response, "response is WebhookResponse");
        }
        
        /// <summary>
        /// Test ResendEvent
        /// </summary>
        [Test]
        public void ResendEventTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? webhookOid = null;
            //string eventName = null;
            //var response = instance.ResendEvent(webhookOid, eventName);
            //Assert.IsInstanceOf<WebhookSampleRequestResponse> (response, "response is WebhookSampleRequestResponse");
        }
        
        /// <summary>
        /// Test UpdateWebhook
        /// </summary>
        [Test]
        public void UpdateWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Webhook webhook = null;
            //int? webhookOid = null;
            //bool? placeholders = null;
            //var response = instance.UpdateWebhook(webhook, webhookOid, placeholders);
            //Assert.IsInstanceOf<WebhookResponse> (response, "response is WebhookResponse");
        }
        
    }

}
