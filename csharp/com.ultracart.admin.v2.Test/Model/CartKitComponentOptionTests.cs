/* 
 * UltraCart Rest API V2
 *
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using com.ultracart.admin.v2.Api;
using com.ultracart.admin.v2.Model;
using com.ultracart.admin.v2.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace com.ultracart.admin.v2.Test
{
    /// <summary>
    ///  Class for testing CartKitComponentOption
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class CartKitComponentOptionTests
    {
        // TODO uncomment below to declare an instance variable for CartKitComponentOption
        //private CartKitComponentOption instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of CartKitComponentOption
            //instance = new CartKitComponentOption();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CartKitComponentOption
        /// </summary>
        [Test]
        public void CartKitComponentOptionInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" CartKitComponentOption
            //Assert.IsInstanceOfType<CartKitComponentOption> (instance, "variable 'instance' is a CartKitComponentOption");
        }


        /// <summary>
        /// Test the property 'CostIfSpecified'
        /// </summary>
        [Test]
        public void CostIfSpecifiedTest()
        {
            // TODO unit test for the property 'CostIfSpecified'
        }
        /// <summary>
        /// Test the property 'CostPerLetter'
        /// </summary>
        [Test]
        public void CostPerLetterTest()
        {
            // TODO unit test for the property 'CostPerLetter'
        }
        /// <summary>
        /// Test the property 'CostPerLine'
        /// </summary>
        [Test]
        public void CostPerLineTest()
        {
            // TODO unit test for the property 'CostPerLine'
        }
        /// <summary>
        /// Test the property 'IgnoreIfDefault'
        /// </summary>
        [Test]
        public void IgnoreIfDefaultTest()
        {
            // TODO unit test for the property 'IgnoreIfDefault'
        }
        /// <summary>
        /// Test the property 'ItemId'
        /// </summary>
        [Test]
        public void ItemIdTest()
        {
            // TODO unit test for the property 'ItemId'
        }
        /// <summary>
        /// Test the property 'ItemOid'
        /// </summary>
        [Test]
        public void ItemOidTest()
        {
            // TODO unit test for the property 'ItemOid'
        }
        /// <summary>
        /// Test the property 'Label'
        /// </summary>
        [Test]
        public void LabelTest()
        {
            // TODO unit test for the property 'Label'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'OneTimeFee'
        /// </summary>
        [Test]
        public void OneTimeFeeTest()
        {
            // TODO unit test for the property 'OneTimeFee'
        }
        /// <summary>
        /// Test the property 'OptionOid'
        /// </summary>
        [Test]
        public void OptionOidTest()
        {
            // TODO unit test for the property 'OptionOid'
        }
        /// <summary>
        /// Test the property 'Required'
        /// </summary>
        [Test]
        public void RequiredTest()
        {
            // TODO unit test for the property 'Required'
        }
        /// <summary>
        /// Test the property 'SelectedValue'
        /// </summary>
        [Test]
        public void SelectedValueTest()
        {
            // TODO unit test for the property 'SelectedValue'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Values'
        /// </summary>
        [Test]
        public void ValuesTest()
        {
            // TODO unit test for the property 'Values'
        }

    }

}
